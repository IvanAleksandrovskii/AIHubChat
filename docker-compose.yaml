# TODO: ADD HEALTHCHECKS

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "${APP_RUN_PORT:-8000}:8000"
    networks:
      - inner_ai_hub
    depends_on:
      - pg_database
    environment:
      - APP_RUN_WORKERS=${APP_RUN_WORKERS:-4} # Increase i case of high load as well as database sessions
      - DEBUG=${DEBUG:-False} # Better make it True, that's a test build

      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-"*"} # * Needed to change amd put the frontend url, make it list and urls as a strings
      # - ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-["https://8635-184-22-34-53.ngrok-free.app"]}

      - POSTGRES_ADDRESS=${POSTGRES_ADDRESS:-pg_database} # * Needed to make secure
      - POSTGRES_DB=${POSTGRES_DB:-AIHub} # *
      - POSTGRES_USER=${POSTGRES_USER:-postgres} # *
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password} # *
      - POSTGRES_POOL_SIZE=${POSTGRES_POOL_SIZE:-10}
      - POSTGRES_MAX_OVERFLOW=${POSTGRES_MAX_OVERFLOW:-20}

      # - BOT_TOKEN=${BOT_TOKEN:-7638664164:AA...} # Fill with the bot token or make a .env file with BOT_TOKEN=...

      - SQLADMIN_SECRET_KEY=${SQLADMIN_SECRET_KEY:-sqladmin_secret_key} # * UNSECURE, update it
      - SQLADMIN_USERNAME=${SQLADMIN_USERNAME:-admin} # * UNSECURE, update it
      - SQLADMIN_PASSWORD=${SQLADMIN_PASSWORD:-password} # *  UNSECURE, update it

    command: /app/start.sh
    restart: always

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "${FRONTEND_RUN_PORT:-5173}:5173"
    environment:
      - VITE_APP_HOST=${VITE_APP_HOST:-8635-184-22-34-53.ngrok-free.app}
      - VITE_API_BASE_URL=${VITE_API_BASE_URL:-https://jy3dlw-ip-184-22-34-53.tunnelmole.net/api}
    # volumes:  # MOVED TO Dockerfile
    #   - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
    restart: always

  pg_database:
    # * rename as needed, put the right adress to the web service down below
    image: postgres:16.3
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-AIHub} # *
      POSTGRES_USER: ${POSTGRES_USER:-postgres} # *
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password} # *
    ports:
      - "5432:5432"
    networks:
      - inner_ai_hub
    volumes:
      - pg_data:/var/lib/postgresql/data
    restart: always

networks:
  inner_ai_hub:
    external: false
    driver: bridge

volumes:
  pg_data:
  media:
